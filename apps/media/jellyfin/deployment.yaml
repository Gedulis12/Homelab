---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  labels:
    app: jellyfin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
      nodeSelector:
        kubernetes.io/hostname: n200
      initContainers:
        - name: copy-config
          image: busybox:latest
          command: ['sh', '-xe', '-c']
          args:
            - cp -f -L -v /config-init/* /config/;
              ls -lahR /config/;
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          volumeMounts:
            - name: config-cm
              mountPath: "/config-init"
            - name: config-pvc
              mountPath: "/config"
      containers:
        - name: jellyfin
          image: lscr.io/linuxserver/jellyfin:latest
          securityContext:
            privileged: true
          env:
            - name: TZ
              value: "Europe/Vilnius"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - name: http
              containerPort: 8096
          volumeMounts:
            - name: config-pvc
              mountPath: "/config"
            - name: media
              mountPath: "/media"
            - name: quicksync
              mountPath: /dev/dri
      volumes:
        - name: config-pvc
          persistentVolumeClaim:
            claimName: jellyfin-config
        - name: config-cm
          configMap:
            name: jellyfin-cm
        - name: media
          persistentVolumeClaim:
            claimName: media
        - name: quicksync
          hostPath:
            path: /dev/dri
